name: Deploy Python to Lambda
on: # trigger this action whenever changes are pushed to main
  push:
    branches:
      -master
jobs:
  build: # packages code and deploys it to AWS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Deploy Code to Lambda
      uses: mariamrf/py-lambda-action@v1.0.0
      with: 
        lambda_layer_arn: 'arn:aws:lambda:${{ secrets.AWS_REGION }}:4888-2293-6157:layer:lambda_deps'
        lambda_function_name: 'discord_event_handler'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    - name: Upload Commands to S3
      uses: tpaschalis/s3-sync-action@main
      env:
        FILE: ./commands/commands.json
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  publish: # publishes the contents of commands.json to TEST_SERVERS
    needs: build
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
    - name: Publish Commands
      uses: actions/checkout@main
    - name: Install Python 3
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Publish Slash Commands to Discord
      env: 
        APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
        TEST_SERVERS: ${{ secrets.TEST_SERVERS }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        output=$(python scripts/publish_commands.py -t)
        echo "::set-output name=publishStatus::$output"
      id: step1
    - name: Print status
      run: echo "${{ steps.step1.outputs.publishStatus }}"
